```python
def find_shortest_title(K, Rn, Pn, Sn, P, S, roots, prefixes, suffixes):
    from itertools import combinations

    def get_combinations(affixes, max_count):
        result = []
        for count in range(max_count + 1):
            result.extend(combinations(affixes, count))
        return result

    root_words = [(roots[i][0], roots[i][1]) for i in range(Rn)]
    prefix_combinations = get_combinations(prefixes, P)
    suffix_combinations = get_combinations(suffixes, S)

    min_length = float('inf')

    for root, root_score in root_words:
        for prefix_combo in prefix_combinations:
            for suffix_combo in suffix_combinations:
                total_score = root_score + sum(p[1] for p in prefix_combo) + sum(s[1] for s in suffix_combo)
                if total_score == K:
                    title_length = len(root) + sum(len(p[0]) for p in prefix_combo) + sum(len(s[0]) for s in suffix_combo)
                    min_length = min(min_length, title_length)

    return min_length

# Example usage:
# K = 10
# Rn = 2
# Pn = 2
# Sn = 2
# P = 1
# S = 1
# roots = [('root1', 5), ('root2', 3)]
# prefixes = [('pre1', 2), ('pre2', 1)]
# suffixes = [('suf1', 2), ('suf2', 1)]
# print(find_shortest_title(K, Rn, Pn, Sn, P, S, roots, prefixes, suffixes))
```