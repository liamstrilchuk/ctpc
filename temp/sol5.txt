```python
def find_shortest_title_length(K, Rn, Pn, Sn, P, S, root_words, prefixes, suffixes):
    from itertools import combinations

    def get_combinations(affixes, max_count):
        combs = []
        for count in range(max_count + 1):
            combs.extend(combinations(affixes, count))
        return combs

    root_dict = {word: score for word, score in root_words}
    prefix_dict = {word: score for word, score in prefixes}
    suffix_dict = {word: score for word, score in suffixes}

    min_length = float('inf')

    for root, root_score in root_dict.items():
        prefix_combs = get_combinations(prefixes, P)
        suffix_combs = get_combinations(suffixes, S)

        for prefix_comb in prefix_combs:
            for suffix_comb in suffix_combs:
                total_score = root_score + sum(prefix_dict[p] for p in prefix_comb) + sum(suffix_dict[s] for s in suffix_comb)
                if total_score == K:
                    length = len(root) + sum(len(p) for p in prefix_comb) + sum(len(s) for s in suffix_comb)
                    min_length = min(min_length, length)

    return min_length

# Example usage:
# K, Rn, Pn, Sn, P, S = 10, 3, 3, 3, 2, 2
# root_words = [("root1", 4), ("root2", 5), ("root3", 6)]
# prefixes = [("pre1", 2), ("pre2", 3), ("pre3", 1)]
# suffixes = [("suf1", 1), ("suf2", 2), ("suf3", 3)]
# print(find_shortest_title_length(K, Rn, Pn, Sn, P, S, root_words, prefixes, suffixes))
```