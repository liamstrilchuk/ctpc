```python
def find_shortest_title(K, Rn, Pn, Sn, P, S, root_words, prefixes, suffixes):
    from itertools import combinations

    def get_score_combinations(elements, max_count):
        scores = [score for _, score in elements]
        comb_scores = set()
        for i in range(max_count + 1):
            for comb in combinations(scores, i):
                comb_scores.add(sum(comb))
        return comb_scores

    root_scores = {word: score for word, score in root_words}
    prefix_scores = get_score_combinations(prefixes, P)
    suffix_scores = get_score_combinations(suffixes, S)

    min_length = float('inf')

    for root_word, root_score in root_words:
        for pref_score in prefix_scores:
            for suff_score in suffix_scores:
                total_score = root_score + pref_score + suff_score
                if total_score == K:
                    title_length = len(root_word)
                    title_length += sum(len(pref) for pref, _ in prefixes if _ in prefix_scores)
                    title_length += sum(len(suff) for suff, _ in suffixes if _ in suffix_scores)
                    min_length = min(min_length, title_length)

    return min_length

# Example usage:
K, Rn, Pn, Sn, P, S = 10, 1, 1, 1, 1, 1
root_words = [("root", 5)]
prefixes = [("pre", 3)]
suffixes = [("suf", 2)]
print(find_shortest_title(K, Rn, Pn, Sn, P, S, root_words, prefixes, suffixes))
```